{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useState, useEffect } from 'react';\nimport messaging from '@react-native-firebase/messaging';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nfunction requestUserPermission() {\n  return _requestUserPermission.apply(this, arguments);\n}\nfunction _requestUserPermission() {\n  _requestUserPermission = _asyncToGenerator(function* () {\n    var authStatus = yield messaging().requestPermission();\n    var enabled = authStatus === messaging.AuthorizationStatus.AUTHORIZED || authStatus === messaging.AuthorizationStatus.PROVISIONAL;\n    if (enabled) {\n      console.log('Authorization status:', authStatus);\n    }\n  });\n  return _requestUserPermission.apply(this, arguments);\n}\nexport default function PushNotifications(data) {\n  var navigation = useNavigation();\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState('Home'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    initialRoute = _useState4[0],\n    setInitialRoute = _useState4[1];\n  useEffect(function () {\n    messaging().onNotificationOpenedApp(function (remoteMessage) {\n      console.log('Notification caused app to open from background state:', remoteMessage.notification);\n      navigation.navigate(remoteMessage.data.type);\n    });\n    messaging().getInitialNotification().then(function (remoteMessage) {\n      if (remoteMessage) {\n        console.log('Notification caused app to open from quit state:', remoteMessage.notification);\n        setInitialRoute(remoteMessage.data.type);\n      }\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return null;\n  }\n  messaging().sendMessage({\n    data: {\n      \"id\": data.id,\n      \"content\": data.content\n    }\n  });\n  return {\n    PushNotifications: PushNotifications\n  };\n}","map":{"version":3,"names":["React","useState","useEffect","messaging","NavigationContainer","useNavigation","requestUserPermission","authStatus","requestPermission","enabled","AuthorizationStatus","AUTHORIZED","PROVISIONAL","console","log","PushNotifications","data","navigation","loading","setLoading","initialRoute","setInitialRoute","onNotificationOpenedApp","remoteMessage","notification","navigate","type","getInitialNotification","then","sendMessage","id","content"],"sources":["/Users/lihangning/Desktop/second-app/client/components/messages.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport messaging from '@react-native-firebase/messaging';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\n\n// for ios \nasync function requestUserPermission() {\n    const authStatus = await messaging().requestPermission();\n    const enabled =\n        authStatus === messaging.AuthorizationStatus.AUTHORIZED ||\n        authStatus === messaging.AuthorizationStatus.PROVISIONAL;\n\n    if (enabled) {\n        console.log('Authorization status:', authStatus);\n    }\n}\n\nexport default function PushNotifications(data) {\n  const navigation = useNavigation();\n  const [loading, setLoading] = useState(true);\n  const [initialRoute, setInitialRoute] = useState('Home');\n\n  useEffect(() => {\n    // Assume a message-notification contains a \"type\" property in the data payload of the screen to open\n\n    messaging().onNotificationOpenedApp(remoteMessage => {\n      console.log(\n        'Notification caused app to open from background state:',\n        remoteMessage.notification,\n      );\n      navigation.navigate(remoteMessage.data.type);\n    });\n\n    // Check whether an initial notification is available\n    messaging()\n      .getInitialNotification()\n      .then(remoteMessage => {\n        if (remoteMessage) {\n          console.log(\n            'Notification caused app to open from quit state:',\n            remoteMessage.notification,\n          );\n          setInitialRoute(remoteMessage.data.type); // e.g. \"Settings\"\n        }\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return null;\n  }\n\n  messaging().sendMessage({\n    data:{\n      \"id\": data.id,\n      \"content\": data.content\n    }\n  });\n\n  return { PushNotifications };\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,kCAAkC;AACxD,SAASC,mBAAmB,EAAEC,aAAa,QAAQ,0BAA0B;AAAC,SAG/DC,qBAAqB;EAAA;AAAA;AAAA;EAAA,2CAApC,aAAuC;IACnC,IAAMC,UAAU,SAASJ,SAAS,EAAE,CAACK,iBAAiB,EAAE;IACxD,IAAMC,OAAO,GACTF,UAAU,KAAKJ,SAAS,CAACO,mBAAmB,CAACC,UAAU,IACvDJ,UAAU,KAAKJ,SAAS,CAACO,mBAAmB,CAACE,WAAW;IAE5D,IAAIH,OAAO,EAAE;MACTI,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEP,UAAU,CAAC;IACpD;EACJ,CAAC;EAAA;AAAA;AAED,eAAe,SAASQ,iBAAiB,CAACC,IAAI,EAAE;EAC9C,IAAMC,UAAU,GAAGZ,aAAa,EAAE;EAClC,gBAA8BJ,QAAQ,CAAC,IAAI,CAAC;IAAA;IAArCiB,OAAO;IAAEC,UAAU;EAC1B,iBAAwClB,QAAQ,CAAC,MAAM,CAAC;IAAA;IAAjDmB,YAAY;IAAEC,eAAe;EAEpCnB,SAAS,CAAC,YAAM;IAGdC,SAAS,EAAE,CAACmB,uBAAuB,CAAC,UAAAC,aAAa,EAAI;MACnDV,OAAO,CAACC,GAAG,CACT,wDAAwD,EACxDS,aAAa,CAACC,YAAY,CAC3B;MACDP,UAAU,CAACQ,QAAQ,CAACF,aAAa,CAACP,IAAI,CAACU,IAAI,CAAC;IAC9C,CAAC,CAAC;IAGFvB,SAAS,EAAE,CACRwB,sBAAsB,EAAE,CACxBC,IAAI,CAAC,UAAAL,aAAa,EAAI;MACrB,IAAIA,aAAa,EAAE;QACjBV,OAAO,CAACC,GAAG,CACT,kDAAkD,EAClDS,aAAa,CAACC,YAAY,CAC3B;QACDH,eAAe,CAACE,aAAa,CAACP,IAAI,CAACU,IAAI,CAAC;MAC1C;MACAP,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE;IACX,OAAO,IAAI;EACb;EAEAf,SAAS,EAAE,CAAC0B,WAAW,CAAC;IACtBb,IAAI,EAAC;MACH,IAAI,EAAEA,IAAI,CAACc,EAAE;MACb,SAAS,EAAEd,IAAI,CAACe;IAClB;EACF,CAAC,CAAC;EAEF,OAAO;IAAEhB,iBAAiB,EAAjBA;EAAkB,CAAC;AAC9B"},"metadata":{},"sourceType":"module"}