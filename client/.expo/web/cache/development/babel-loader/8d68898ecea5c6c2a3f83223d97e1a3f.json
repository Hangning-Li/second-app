{"ast":null,"code":"import * as React from 'react';\nimport * as Svgs from \"../svgs\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport View from \"react-native-web/dist/exports/View\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport TeamScreen from \"./screens/TeamScreen\";\nimport ActivityScreen from \"./screens/ActivityScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar homeName = 'Home';\nvar teamName = 'Team';\nvar activityName = \"Activity\";\nvar Tab = createBottomTabNavigator();\nexport default function MainConatiner() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: homeName,\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            var rn = route.name;\n            if (rn === homeName) {\n              if (iconName = focused) {\n                return _jsx(View, {\n                  children: _jsx(Svgs.NavBarHome, {})\n                });\n              } else {\n                return _jsx(View, {\n                  children: _jsx(Svgs.NavBarHomeInactive, {})\n                });\n              }\n            } else if (rn === teamName) {\n              if (iconName = focused) {\n                return _jsx(View, {\n                  children: _jsx(Svgs.NavBarTeam, {})\n                });\n              } else {\n                return _jsx(View, {\n                  children: _jsx(Svgs.NavBarTeamInactive, {})\n                });\n              }\n            } else if (rn === activityName) {\n              if (iconName = focused) {\n                return _jsx(View, {\n                  children: _jsx(Svgs.NavBarActivityGeneralTransport, {})\n                });\n              } else {\n                return _jsx(View, {\n                  children: _jsx(Svgs.NavBarActivityGeneralTransportInactive, {})\n                });\n              }\n            }\n          },\n          tabBarActiveTintColor: 'tomato',\n          tabBarInactiveTintColor: 'grey',\n          tabBarLabelStyle: {\n            paddingBottom: 10,\n            fontSize: 10\n          },\n          tabBarStyle: {\n            padding: 10,\n            height: 100\n          }\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: homeName,\n        component: HomeScreen\n      }), _jsx(Tab.Screen, {\n        name: teamName,\n        component: TeamScreen\n      }), _jsx(Tab.Screen, {\n        name: activityName,\n        component: ActivityScreen\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","Svgs","NavigationContainer","createBottomTabNavigator","HomeScreen","TeamScreen","ActivityScreen","homeName","teamName","activityName","Tab","MainConatiner","route","tabBarIcon","focused","color","size","iconName","rn","name","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabelStyle","paddingBottom","fontSize","tabBarStyle","padding","height"],"sources":["/Users/lihangning/Desktop/second-app/client/navigation/MainContainer.tsx"],"sourcesContent":["import * as React from 'react';\n\n// SVG Files\nimport * as Svgs from '../svgs';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { View } from 'react-native';\n\n// Screens\nimport HomeScreen from './screens/HomeScreen';\nimport TeamScreen from './screens/TeamScreen';\nimport ActivityScreen from './screens/ActivityScreen';\n\n// Screen names\nconst homeName = 'Home';\nconst teamName = 'Team';\nconst activityName = \"Activity\";\n\nconst Tab = createBottomTabNavigator();\n\nexport default function MainConatiner() {\n    return (\n        <NavigationContainer>\n            <Tab.Navigator\n                initialRouteName={homeName}\n                screenOptions={({ route }) => ({\n                    tabBarIcon: ({ focused, color, size }) => {\n                        let iconName;\n                        let rn = route.name;\n\n                        if (rn === homeName) {\n                            if (iconName = focused) {\n                                return (<View><Svgs.NavBarHome /></View>);\n                            }else{\n                                return (<View><Svgs.NavBarHomeInactive /></View>);\n                            }\n\n                        } else if (rn === teamName) {\n                            if (iconName = focused) {\n                                return (<View><Svgs.NavBarTeam /></View>);\n                            }else{\n                                return (<View><Svgs.NavBarTeamInactive /></View>);\n                            }\n\n                        } else if (rn === activityName) {\n                            if (iconName = focused) {\n                                return (<View><Svgs.NavBarActivityGeneralTransport /></View>);\n                            }else{\n                                return (<View><Svgs.NavBarActivityGeneralTransportInactive /></View>);\n                            }\n                        }\n                    },\n                    tabBarActiveTintColor: 'tomato',\n                    tabBarInactiveTintColor: 'grey',\n                    tabBarLabelStyle: { paddingBottom: 10, fontSize: 10 },\n                    tabBarStyle: { padding: 10, height: 100 }\n\n                })}\n            >\n\n                <Tab.Screen name={homeName} component={HomeScreen} />\n                <Tab.Screen name={teamName} component={TeamScreen} />\n                <Tab.Screen name={activityName} component={ActivityScreen} />\n\n            </Tab.Navigator>\n\n        </NavigationContainer>\n    );\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAG9B,OAAO,KAAKC,IAAI;AAEhB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AAAC;AAIzE,OAAOC,UAAU;AACjB,OAAOC,UAAU;AACjB,OAAOC,cAAc;AAAiC;AAAA;AAGtD,IAAMC,QAAQ,GAAG,MAAM;AACvB,IAAMC,QAAQ,GAAG,MAAM;AACvB,IAAMC,YAAY,GAAG,UAAU;AAE/B,IAAMC,GAAG,GAAGP,wBAAwB,EAAE;AAEtC,eAAe,SAASQ,aAAa,GAAG;EACpC,OACI,KAAC,mBAAmB;IAAA,UAChB,MAAC,GAAG,CAAC,SAAS;MACV,gBAAgB,EAAEJ,QAAS;MAC3B,aAAa,EAAE;QAAA,IAAGK,KAAK,QAALA,KAAK;QAAA,OAAQ;UAC3BC,UAAU,EAAE,2BAA8B;YAAA,IAA3BC,OAAO,SAAPA,OAAO;cAAEC,KAAK,SAALA,KAAK;cAAEC,IAAI,SAAJA,IAAI;YAC/B,IAAIC,QAAQ;YACZ,IAAIC,EAAE,GAAGN,KAAK,CAACO,IAAI;YAEnB,IAAID,EAAE,KAAKX,QAAQ,EAAE;cACjB,IAAIU,QAAQ,GAAGH,OAAO,EAAE;gBACpB,OAAQ,KAAC,IAAI;kBAAA,UAAC,KAAC,IAAI,CAAC,UAAU;gBAAG,EAAO;cAC5C,CAAC,MAAI;gBACD,OAAQ,KAAC,IAAI;kBAAA,UAAC,KAAC,IAAI,CAAC,kBAAkB;gBAAG,EAAO;cACpD;YAEJ,CAAC,MAAM,IAAII,EAAE,KAAKV,QAAQ,EAAE;cACxB,IAAIS,QAAQ,GAAGH,OAAO,EAAE;gBACpB,OAAQ,KAAC,IAAI;kBAAA,UAAC,KAAC,IAAI,CAAC,UAAU;gBAAG,EAAO;cAC5C,CAAC,MAAI;gBACD,OAAQ,KAAC,IAAI;kBAAA,UAAC,KAAC,IAAI,CAAC,kBAAkB;gBAAG,EAAO;cACpD;YAEJ,CAAC,MAAM,IAAII,EAAE,KAAKT,YAAY,EAAE;cAC5B,IAAIQ,QAAQ,GAAGH,OAAO,EAAE;gBACpB,OAAQ,KAAC,IAAI;kBAAA,UAAC,KAAC,IAAI,CAAC,8BAA8B;gBAAG,EAAO;cAChE,CAAC,MAAI;gBACD,OAAQ,KAAC,IAAI;kBAAA,UAAC,KAAC,IAAI,CAAC,sCAAsC;gBAAG,EAAO;cACxE;YACJ;UACJ,CAAC;UACDM,qBAAqB,EAAE,QAAQ;UAC/BC,uBAAuB,EAAE,MAAM;UAC/BC,gBAAgB,EAAE;YAAEC,aAAa,EAAE,EAAE;YAAEC,QAAQ,EAAE;UAAG,CAAC;UACrDC,WAAW,EAAE;YAAEC,OAAO,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAI;QAE5C,CAAC;MAAA,CAAE;MAAA,WAGH,KAAC,GAAG,CAAC,MAAM;QAAC,IAAI,EAAEpB,QAAS;QAAC,SAAS,EAAEH;MAAW,EAAG,EACrD,KAAC,GAAG,CAAC,MAAM;QAAC,IAAI,EAAEI,QAAS;QAAC,SAAS,EAAEH;MAAW,EAAG,EACrD,KAAC,GAAG,CAAC,MAAM;QAAC,IAAI,EAAEI,YAAa;QAAC,SAAS,EAAEH;MAAe,EAAG;IAAA;EAEjD,EAEE;AAE9B"},"metadata":{},"sourceType":"module"}